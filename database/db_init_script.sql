// database language postgresql
// create database named DecorateKarlo 

CREATE DATABASE IF NOT EXISTS DecorateKarlo;

CREATE USER IF NOT EXISTS 'decoratekarlo'@'localhost' 
  IDENTIFIED BY 'decoratekarlo' WITH 
  ENCRYPTED PASSWORD 'olraketaroced';

GRANT ALL PRIVILEGES ON DecorateKarlo.* TO 'decoratekarlo'@'localhost';

CREATE TABLE IF NOT EXISTS USERS (
  ID INT NOT NULL AUTO_INCREMENT,
  USERNAME VARCHAR(25) NOT NULL,
  PASSWORD_HASH VARCHAR(256) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL,
  FIRST_NAME VARCHAR(100) NOT NULL,
  LAST_NAME VARCHAR(100) NOT NULL,
  TELEPHONE VARCHAR(32) NOT NULL,
  STATUS VARCHAR(16) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS CARD (
  ID INT NOT NULL AUTO_INCREMENT,
  USER_ID INT NOT NULL,
  CARD_NETWORK VARCHAR(16) NOT NULL,
  CARD_HOLDER_NAME VARCHAR(100) NOT NULL,
  CARD_NUMBER VARCHAR(16) NOT NULL,
  CARD_EXPIRY_DATE VARCHAR(5) NOT NULL,
  CARD_CVV VARCHAR(3) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);




CREATE TABLE IF NOT EXISTS DISCOUNT (
  ID INT NOT NULL AUTO_INCREMENT,
  DISCOUNT_NAME VARCHAR(64) NOT NULL,
  DISCOUNT_DESCRIPTION VARCHAR(1000) NOT NULL,
  DISCOUNT_PERCENTAGE INT NOT NULL,
  PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS CATEGORY (
  ID INT NOT NULL AUTO_INCREMENT,
  CATEGORY_NAME VARCHAR(64) NOT NULL,
  CATEGORY_DESCRIPTION VARCHAR(1000) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT (
  ID INT NOT NULL AUTO_INCREMENT,
  PRODUCT_NAME VARCHAR(64) NOT NULL,
  PRODUCT_DESCRIPTION VARCHAR(1000) NOT NULL,
  CATEGORY_ID INT NOT NULL,
  DISCOUNT_ID INT,
  PRIMARY KEY (ID),
  FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID),
  FOREIGN KEY (DISCOUNT_ID) REFERENCES DISCOUNT(ID)
);

CREATE TABLE IF NOT EXISTS PRODUCT_VARIANT (
  ID INT NOT NULL AUTO_INCREMENT,
  PRODUCT_ID INT NOT NULL,
  VARIANT_ATTRIBUTE VARCHAR(64) NOT NULL,
  VARIANT_LEVEL VARCHAR(64) NOT NULL,
  VARIANT_PRICE DECIMAL(10,2) NOT NULL,
  VARIANT_QUANTITY INT NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
);



CREATE TABLE IF NOT EXISTS CART_SESSION (
  ID INT NOT NULL AUTO_INCREMENT,
  USER_ID INT NOT NULL,
  TOTAL DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);
CREATE TABLE IF NOT EXISTS CART_ITEM (
  ID INT NOT NULL AUTO_INCREMENT,
  CART_SESSION_ID INT NOT NULL,
  PRODUCT_VARIANT_ID INT NOT NULL,
  QUANTITY INT NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (CART_SESSION_ID) REFERENCES CART_SESSION(ID),
  FOREIGN KEY (PRODUCT_VARIANT_ID) REFERENCES PRODUCT_VARIANT(ID)
);





CREATE TABLE IF NOT EXISTS DELIVERY_ADDRESS (
  ID INT NOT NULL AUTO_INCREMENT,
  ADDRESS_LINE_1 VARCHAR(100) NOT NULL,
  ADDRESS_LINE_2 VARCHAR(100),
  CITY VARCHAR(100) NOT NULL,
  COUNTY VARCHAR(100) NOT NULL,
  POSTCODE VARCHAR(10) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);
CREATE TABLE IF NOT EXISTS PAYMENT (
  ID INT NOT NULL AUTO_INCREMENT,
  CARD_NETWORK VARCHAR(16) NOT NULL,
  CARD_HOLDER_NAME VARCHAR(100) NOT NULL,
  CARD_NUMBER VARCHAR(16) NOT NULL,
  CARD_EXPIRY_DATE VARCHAR(5) NOT NULL,
  CARD_CVV VARCHAR(3) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);


CREATE TABLE IF NOT EXISTS ORDER_DETAILS (
  ID INT NOT NULL AUTO_INCREMENT,
  USER_ID INT NOT NULL,
  TOTAL DECIMAL(10,2) NOT NULL,
  DELIVERY_ADDRESS_ID INT NOT NULL,
  PAYMENT_METHOD VARCHAR(16) NOT NULL,
  PAYMENT_ID INT,
  ORDER_STATUS VARCHAR(16) NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
  FOREIGN KEY (DELIVERY_ADDRESS_ID) REFERENCES DELIVERY_ADDRESS(ID),
  FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(ID)
);

CREATE TABLE IF NOT EXISTS ORDER_ITEM (
  ID INT NOT NULL AUTO_INCREMENT,
  ORDER_ID INT NOT NULL,
  PRODUCT_VARIANT_ID INT NOT NULL,
  QUANTITY INT NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (ORDER_ID) REFERENCES ORDER_DETAILS(ID),
  FOREIGN KEY (PRODUCT_VARIANT_ID) REFERENCES PRODUCT_VARIANT(ID)
);






CREATE TABLE IF NOT EXISTS REVIEWS (
  ID INT NOT NULL AUTO_INCREMENT,
  USER_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  COMMENT VARCHAR(1000) NOT NULL,
  RATING INT NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
);